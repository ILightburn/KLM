name: Windows 32bit Build

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build32:
    name: Windows 32bit Build
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: seanmiddleditch/gha-setup-ninja@master

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Cache Qt
        id: cache-qt
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: "D:/a/KLM/Qt"
          key: ${{ runner.os }}-Qt32Cache-5.15.2-1

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: '5.15.2'
          modules: 'core'
          arch: win32_msvc2019


      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x86

      - name: Configure CMake
        shell: cmd
        working-directory: ${{github.workspace}}/build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release -G Ninja

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build .

      - name: Create output dir and copy exe and deps
        run: |
          mkdir output
          copy build\klm.exe output\
          copy LICENSE output\license.txt
          copy icons\klm.ico output\klm.ico
          windeployqt --release --compiler-runtime output/klm.exe

      - name: Create Installer
        run: |
          cp windows/klm-x86.iss inst.iss
          sed -i "s/#define MyAppVersion.*/#define MyAppVersion \"${{ steps.get_version.outputs.version-without-v }}\"/" inst.iss
          mkdir installer
          "c:/Program Files (x86)/Inno Setup 6/iscc.exe" inst.iss
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "installer/OpenKJ-KLM-${{ steps.get_version.outputs.version-without-v }}-x86.exe"
          prerelease: ${{ contains(steps.get_version.outputs.prerelease, 'alpha') || contains(steps.get_version.outputs.prerelease, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive build
        uses: actions/upload-artifact@v2
        with:
          name: Win32 test build
          path: installer

      - id: upload-file
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.gcp_credentials }}
          path: "installer/OpenKJ-KLM-${{ steps.get_version.outputs.version-without-v }}-x86.exe"
          destination: openkj-installers/klm